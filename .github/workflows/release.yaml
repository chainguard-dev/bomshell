# Copyright 2023 The OpenVEX Authors
# SPDX-License-Identifier: Apache-2.0

name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for pushing the images to ghcr.io

    env:
      GO111MODULE: on
      COSIGN_EXPERIMENTAL: "true"

    steps:
      - name: Check out code onto GOPATH
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.0.2

      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v3.3.0
        with:
          go-version: '1.20'
          check-latest: true

      - name: Install cosign
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 # v3.1.1

      - name: Install bom
        uses: puerco/release-actions/setup-bom@6c88cda6495b4415966e61f20798fb96a9081397 # main

      - name: Get TAG
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set LDFLAGS
        id: ldflags
        run: |
            source ./release/ldflags.sh
            goflags=$(ldflags)
            echo "GO_FLAGS="${goflags}"" >> "$GITHUB_ENV"

      - name: Run GoReleaser
        id: run-goreleaser
        uses: goreleaser/goreleaser-action@336e29918d653399e599bfca99fadc1d7ffbc9f7 # v4.3.0
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LDFLAGS: ${{ env.GO_FLAGS }}

      - name: Generate subject
        id: hash
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail
          checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
          echo "hashes=$(cat $checksum_file | base64 -w0)" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [release]
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.7.0
    with:
      base64-subjects: "${{ needs.release.outputs.hashes }}"
      upload-assets: false # do not upload to a new release since goreleaser creates it

  release-provenance:
    needs: [provenance]
    runs-on: ubuntu-latest
    permissions:
      actions: read # To read the workflow path.
      contents: write # To add assets to a release.
    steps:
      - name: Download the provenance
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{needs.provenance.outputs.provenance-name}}

      - name: Release Provenance
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        id: release-provenance
        with:
          draft: true
          files: ${{needs.provenance.outputs.provenance-name}}
